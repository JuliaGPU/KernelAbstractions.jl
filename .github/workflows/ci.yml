name: CI
on:
  push:
    branches:
      - master
      - staging
      - trying
    tags: '*'
defaults:
  run:
    shell: bash
jobs:
  CI:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.3'
          - '1.4'
          - '1.5'
          - '1' # automatically expands to the latest stable 1.x release of Julia.
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: julia .ci/develop.jl
      - run: julia .ci/test.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: julia .ci/add-general-registry.jl
        env:
          JULIA_PKG_SERVER: ""
      - run: julia --project=docs .ci/develop.jl
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  doctests:
    name: Doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: 'nightly'
      - run: julia .ci/add-general-registry.jl
        env:
          JULIA_PKG_SERVER: ""
      - run: julia --project=docs .ci/develop.jl
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using KernelAbstractions
            using CUDAKernels
            doctest(KernelAbstractions; manual = true)
            doctest(CUDAKernels; manual = false)'
